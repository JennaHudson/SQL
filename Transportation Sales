---Let's inspect the sales data I just imported into Microsoft SQL Server

SELECT * FROM [dbo].[sales_data_sample]

--Checking unique values using DISTINCT
SELECT DISTINCT STATUS FROM [dbo].[sales_data_sample] 
SELECT DISTINCT YEAR_ID FROM [dbo].[sales_data_sample] 
SELECT DISTINCT PRODUCTLINE FROM [dbo].[sales_data_sample] 
SELECT DISTINCT COUNTRY FROM [dbo].[sales_data_sample] 
SELECT DISTINCT DEALSIZE FROM [dbo].[sales_data_sample] 
SELECT DISTINCT TERRITORY FROM [dbo].[sales_data_sample]

---ANALYSIS
-- Grouping sales by product line. Using aggregate function SUM of sales by the product line to see what product sells the most!
SELECT PRODUCTLINE, SUM(SALES) Revenue 
FROM [dbo].[sales_data_sample]
GROUP BY PRODUCTLINE
ORDER BY 2 desc 
--It's Classic Cars that sell the most!
--I'm calling sales "Revenue"
--An aggregate function must be accompanied with a group by to categorize the sales across the product
--Ordering by Revenue which is 2(position 2 in select statement). Chose decending order so the highest amount will be on top.

--Knowing that information let's see which year they made the most sales
SELECT YEAR_ID, SUM(SALES) Revenue 
FROM [dbo].[sales_data_sample]
GROUP BY YEAR_ID
ORDER BY 2 desc

--2004 had the most sales. Sales were much lower in 2005 compared to the other years. Why? Marketing? Didn't operate part of the year?
--Let's find out if they operated a full year in 2005. I'm doing a distinct on the month too see how many months they were operating.
SELECT DISTINCT MONTH_ID FROM [dbo].[sales_data_sample]
WHERE YEAR_ID = 2005
--They operated for only 5 months in 2005 from Jan to May contributing to the low sales

--Let's double check the other years for months of operation
SELECT DISTINCT MONTH_ID FROM [dbo].[sales_data_sample]
WHERE YEAR_ID = 2004

SELECT DISTINCT MONTH_ID FROM [dbo].[sales_data_sample]
WHERE YEAR_ID = 2003
--2003 and 2004 operated for a full year.

--Let's do a group by with the deal size
SELECT DEALSIZE, SUM(SALES) Revenue
FROM [dbo].[sales_data_sample]
GROUP BY DEALSIZE
ORDER BY 2 DESC
--The medium size deals generates the most revenue.

--What was the best month for sales in a specific year? How much was earned that month?
SELECT MONTH_ID, SUM(SALES) Revenue, COUNT(ORDERNUMBER) Frequency
FROM [dbo].[sales_data_sample]
WHERE YEAR_ID = 2003
GROUP BY MONTH_ID
ORDER BY 2 DESC
--Sales were exceptional in November 2003

--Checking 2004
SELECT MONTH_ID, SUM(SALES) Revenue, COUNT(ORDERNUMBER) Frequency
FROM [dbo].[sales_data_sample]
WHERE YEAR_ID = 2004
GROUP BY MONTH_ID
ORDER BY 2 DESC
--November wins again in 2004
--Remeber the data is only up until May in 2005 so it would not be a true reflction of the entire year.

--Can conclude the higest revenue month is November

--What product line sells most in best month?
SELECT MONTH_ID, PRODUCTLINE, SUM(SALES) Revenue, COUNT(ORDERNUMBER) Frequency
FROM [dbo].[sales_data_sample]
WHERE YEAR_ID = 2003 AND MONTH_ID = 11
GROUP BY MONTH_ID, PRODUCTLINE
ORDER BY 3 DESC
--Classic cars had the most revenue for 11/2003
--I introduced product line so I have to include that in the group by clause
--I'm doing the order by 3 because the third column is the Revenue Column

--Repeating the query for 11/2004
SELECT MONTH_ID, PRODUCTLINE, SUM(SALES) Revenue, COUNT(ORDERNUMBER) Frequency
FROM [dbo].[sales_data_sample]
WHERE YEAR_ID = 2004 AND MONTH_ID = 11
GROUP BY MONTH_ID, PRODUCTLINE
ORDER BY 3 DESC
--classic cars is the top seller for 11/2004

----Who is our best customer (answered with RFM)


DROP TABLE IF EXISTS #rfm
;with rfm as 
(
	SELECT 
		CUSTOMERNAME, 
		SUM(sales) MonetaryValue,
		AVG(sales) AvgMonetaryValue,
		COUNT(ORDERNUMBER) Frequency,
		MAX(ORDERDATE) last_order_date,
		(SELECT MAX(ORDERDATE) FROM [dbo].[sales_data_sample]) max_order_date,
		DATEDIFF(DD, max(ORDERDATE), (select max(ORDERDATE) from [dbo].[sales_data_sample])) Recency
	FROM [PortfolioDB].[dbo].[sales_data_sample]
	GROUP BY CUSTOMERNAME
),
rfm_calc as
(

	SELECT r.*,
		NTILE(4) OVER (order by Recency desc) rfm_recency,
		NTILE(4) OVER (order by Frequency) rfm_frequency,
		NTILE(4) OVER (order by MonetaryValue) rfm_monetary
	FROM rfm r
)
SELECT 
	c.*, rfm_recency+ rfm_frequency+ rfm_monetary as rfm_cell,
	CAST(rfm_recency as varchar) + CAST(rfm_frequency as varchar) + CAST(rfm_monetary  as varchar)rfm_cell_string
INTO #rfm
FROM rfm_calc c

SELECT CUSTOMERNAME , rfm_recency, rfm_frequency, rfm_monetary,
	case 
		when rfm_cell_string in (111, 112 , 121, 122, 123, 132, 211, 212, 114, 141) then 'lost_customers'  --lost customers
		when rfm_cell_string in (133, 134, 143, 244, 334, 343, 344, 144) then 'slipping away, cannot lose' -- (Big spenders who havenâ€™t purchased lately) slipping away
		when rfm_cell_string in (311, 411, 331) then 'new customers'
		when rfm_cell_string in (222, 223, 233, 322) then 'potential churners'
		when rfm_cell_string in (323, 333,321, 422, 332, 432) then 'active' --(Customers who buy often & recently, but at low price points)
		when rfm_cell_string in (433, 434, 443, 444) then 'loyal'
	end rfm_segment

from #rfm



--What products are most often sold together? 
--SELECT * FROM [dbo].[sales_data_sample] where ORDERNUMBER =  10411

SELECT DISTINCT OrderNumber, stuff(

	(SELECT ',' + PRODUCTCODE
	FROM [dbo].[sales_data_sample] p
	WHERE ORDERNUMBER in 
		(

			select ORDERNUMBER
			from (
				SELECT ORDERNUMBER, count(*) rn
				FROM [PortfolioDB].[dbo].[sales_data_sample]
				WHERE STATUS = 'Shipped'
				GROUP BY ORDERNUMBER
			)m
			where rn = 3
		)
		AND p.ORDERNUMBER = s.ORDERNUMBER
		for xml path (''))

		, 1, 1, '') ProductCodes

FROM [dbo].[sales_data_sample] s
ORDER BY 2 desc


--What city has the highest number of sales in a specific country
SELECT CITY, SUM (sales) Revenue
FROM [dbo].[sales_data_sample]
WHERE COUNTRY = 'UK'
GROUP BY CITY
ORDER BY 2 DESC

---What is the best product in United States?
SELECT COUNTRY, YEAR_ID, PRODUCTLINE, SUM(sales) Revenue
FROM [dbo].[sales_data_sample]
WHERE COUNTRY = 'USA'
GROUP BY COUNTRY, YEAR_ID, PRODUCTLINE
ORDER BY 4 DESC
